// ตัวแปรสำหรับปุ่ม
PButton startButton, loadButton, exitButton;

// สถานะของหน้าจอปัจจุบัน
String screen = "menu"; // เริ่มต้นที่หน้าจอเมนู

void setup() {
  size(450, 450);  // ขนาดหน้าต่าง 450x450 พิกเซล
  background(255); // ตั้งค่าสีพื้นหลังเป็นสีขาว
  
  // สร้างปุ่ม Start, Load และ Exit โดยกำหนดสีเข้มขึ้น
  startButton = new PButton("Start", 150, 150, 150, 50, color(0, 150, 0));    // สีเขียวเข้ม
  loadButton = new PButton("Load", 150, 220, 150, 50, color(0, 0, 200));      // สีน้ำเงินเข้ม
  exitButton = new PButton("Exit", 150, 290, 150, 50, color(200, 0, 0));      // สีแดงเข้ม
}

void draw() {
  // ตรวจสอบสถานะของหน้าจอ
  if (screen.equals("menu")) {
    // แสดงเมนู
    background(255); // ล้างหน้าจอด้วยสีขาว
    startButton.display();
    loadButton.display();
    exitButton.display();
  } else if (screen.equals("sudoku")) {
    // แสดงหน้าจอซูโดกุ
    background(255); // ล้างหน้าจอด้วยสีขาว
    drawSudokuGrid();
  }
}

void mousePressed() {
  if (screen.equals("menu")) {
    // ตรวจสอบว่าคลิกที่ปุ่ม Start หรือไม่
    if (startButton.isClicked(mouseX, mouseY)) {
      println("Start button clicked");
      screen = "sudoku"; // เปลี่ยนหน้าจอเป็นเกมซูโดกุ
    }
    
    // ตรวจสอบว่าคลิกที่ปุ่ม Load หรือไม่
    if (loadButton.isClicked(mouseX, mouseY)) {
      println("Load button clicked");
    }
    
    // ตรวจสอบว่าคลิกที่ปุ่ม Exit หรือไม่ และปิดโปรแกรม
    if (exitButton.isClicked(mouseX, mouseY)) {
      println("Exit button clicked");
      exit(); // ปิดโปรแกรม
    }
  }
}

// ฟังก์ชันวาดตารางซูโดกุ
void drawSudokuGrid() {
  int gridSize = 9;      // ซูโดกุเป็นตารางขนาด 9x9
  float cellSize = width / gridSize;  // ขนาดของช่องแต่ละช่อง

  stroke(0); // กำหนดสีเส้นขอบเป็นสีดำ

  for (int i = 0; i <= gridSize; i++) {
    // วาดเส้นแนวนอนและแนวตั้ง
    strokeWeight(i % 3 == 0 ? 3 : 1); // เส้นหนาทุก 3 ช่อง
    line(i * cellSize, 0, i * cellSize, height); // เส้นแนวตั้ง
    line(0, i * cellSize, width, i * cellSize);  // เส้นแนวนอน
  }
}

// คลาสสำหรับปุ่ม
class PButton {
  String label;
  float x, y, w, h;
  color btnColor; // ตัวแปรสีปุ่ม

  // ตัวสร้างคลาสที่รับค่า label, ตำแหน่ง, ขนาด, และสีของปุ่ม
  PButton(String label, float x, float y, float w, float h, color btnColor) {
    this.label = label;
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.btnColor = btnColor;
  }

  void display() {
    fill(btnColor); // ใช้สีของปุ่มที่กำหนด
    rect(x, y, w, h);
    fill(255); // กำหนดสีตัวหนังสือเป็นสีขาว
    textAlign(CENTER, CENTER);
    text(label, x + w / 2, y + h / 2);
  }

  // ตรวจสอบว่าพิกัดเมาส์ (mx, my) อยู่ภายในปุ่มหรือไม่
  boolean isClicked(float mx, float my) {
    return (mx > x && mx < x + w && my > y && my < y + h);
  }
}
